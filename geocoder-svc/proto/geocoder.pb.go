// NOTE TO DEV:
// GENERATE WITH: protoc --go_out=. ./proto/geocoder.proto --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: proto/geocoder.proto

package geocoder_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Method defines the geocoding method, either forward (address -> point) or reverse (point -> address)
type Method int32

const (
	Method_FWD_FUZZY   Method = 0
	Method_REV_NEAREST Method = 1
)

// Enum value maps for Method.
var (
	Method_name = map[int32]string{
		0: "FWD_FUZZY",
		1: "REV_NEAREST",
	}
	Method_value = map[string]int32{
		"FWD_FUZZY":   0,
		"REV_NEAREST": 1,
	}
)

func (x Method) Enum() *Method {
	p := new(Method)
	*p = x
	return p
}

func (x Method) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Method) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_geocoder_proto_enumTypes[0].Descriptor()
}

func (Method) Type() protoreflect.EnumType {
	return &file_proto_geocoder_proto_enumTypes[0]
}

func (x Method) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Method.Descriptor instead.
func (Method) EnumDescriptor() ([]byte, []int) {
	return file_proto_geocoder_proto_rawDescGZIP(), []int{0}
}

// BatchGeocodeStatus -
type BatchGeocodeStatus int32

const (
	BatchGeocodeStatus_UNDEFINED_STATUS BatchGeocodeStatus = 0
	BatchGeocodeStatus_ACCEPTED         BatchGeocodeStatus = 1
	BatchGeocodeStatus_REJECTED         BatchGeocodeStatus = 2
	BatchGeocodeStatus_IN_QUEUE         BatchGeocodeStatus = 3
	BatchGeocodeStatus_SUCCESS          BatchGeocodeStatus = 4
	BatchGeocodeStatus_FAILED           BatchGeocodeStatus = 5
)

// Enum value maps for BatchGeocodeStatus.
var (
	BatchGeocodeStatus_name = map[int32]string{
		0: "UNDEFINED_STATUS",
		1: "ACCEPTED",
		2: "REJECTED",
		3: "IN_QUEUE",
		4: "SUCCESS",
		5: "FAILED",
	}
	BatchGeocodeStatus_value = map[string]int32{
		"UNDEFINED_STATUS": 0,
		"ACCEPTED":         1,
		"REJECTED":         2,
		"IN_QUEUE":         3,
		"SUCCESS":          4,
		"FAILED":           5,
	}
)

func (x BatchGeocodeStatus) Enum() *BatchGeocodeStatus {
	p := new(BatchGeocodeStatus)
	*p = x
	return p
}

func (x BatchGeocodeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BatchGeocodeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_geocoder_proto_enumTypes[1].Descriptor()
}

func (BatchGeocodeStatus) Type() protoreflect.EnumType {
	return &file_proto_geocoder_proto_enumTypes[1]
}

func (x BatchGeocodeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BatchGeocodeStatus.Descriptor instead.
func (BatchGeocodeStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_geocoder_proto_rawDescGZIP(), []int{1}
}

// Point represents latitude-longitude pairs
// Latitudes in the range +/- 90 degrees and longitude in the range +/- 180 degrees.
type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float32 `protobuf:"fixed32,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geocoder_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geocoder_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_proto_geocoder_proto_rawDescGZIP(), []int{0}
}

func (x *Point) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Point) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

// Address represents a composite address object with an Id, a resolved location, and component data
type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Location               *Point `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	CompositeStreetAddress string `protobuf:"bytes,3,opt,name=composite_street_address,json=compositeStreetAddress,proto3" json:"composite_street_address,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geocoder_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geocoder_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_proto_geocoder_proto_rawDescGZIP(), []int{1}
}

func (x *Address) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Address) GetLocation() *Point {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Address) GetCompositeStreetAddress() string {
	if x != nil {
		return x.CompositeStreetAddress
	}
	return ""
}

// GeocodeRequest canonically represents a request to Geocoder.Geocode, contains one of `Point` or `AddressQuery` (string)
type GeocodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Query:
	//	*GeocodeRequest_AddressQuery
	//	*GeocodeRequest_PointQuery
	Query      isGeocodeRequest_Query `protobuf_oneof:"query"`
	MaxResults uint32                 `protobuf:"varint,3,opt,name=max_results,json=maxResults,proto3" json:"max_results,omitempty"`
	Method     Method                 `protobuf:"varint,4,opt,name=method,proto3,enum=geocoder.Method" json:"method,omitempty"`
}

func (x *GeocodeRequest) Reset() {
	*x = GeocodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geocoder_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeocodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeocodeRequest) ProtoMessage() {}

func (x *GeocodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geocoder_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeocodeRequest.ProtoReflect.Descriptor instead.
func (*GeocodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_geocoder_proto_rawDescGZIP(), []int{2}
}

func (m *GeocodeRequest) GetQuery() isGeocodeRequest_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *GeocodeRequest) GetAddressQuery() string {
	if x, ok := x.GetQuery().(*GeocodeRequest_AddressQuery); ok {
		return x.AddressQuery
	}
	return ""
}

func (x *GeocodeRequest) GetPointQuery() *Point {
	if x, ok := x.GetQuery().(*GeocodeRequest_PointQuery); ok {
		return x.PointQuery
	}
	return nil
}

func (x *GeocodeRequest) GetMaxResults() uint32 {
	if x != nil {
		return x.MaxResults
	}
	return 0
}

func (x *GeocodeRequest) GetMethod() Method {
	if x != nil {
		return x.Method
	}
	return Method_FWD_FUZZY
}

type isGeocodeRequest_Query interface {
	isGeocodeRequest_Query()
}

type GeocodeRequest_AddressQuery struct {
	AddressQuery string `protobuf:"bytes,1,opt,name=address_query,json=addressQuery,proto3,oneof"`
}

type GeocodeRequest_PointQuery struct {
	PointQuery *Point `protobuf:"bytes,2,opt,name=point_query,json=pointQuery,proto3,oneof"`
}

func (*GeocodeRequest_AddressQuery) isGeocodeRequest_Query() {}

func (*GeocodeRequest_PointQuery) isGeocodeRequest_Query() {}

// ScoredAddress attaches metadata to a base `Address` message, contains an additional normalized confidence score and
// the `full_street_address` as identified by the server
type ScoredAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address                *Address `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	NormedConfidence       float32  `protobuf:"fixed32,2,opt,name=normed_confidence,json=normedConfidence,proto3" json:"normed_confidence,omitempty"`
	CompositeStreetAddress string   `protobuf:"bytes,3,opt,name=composite_street_address,json=compositeStreetAddress,proto3" json:"composite_street_address,omitempty"`
}

func (x *ScoredAddress) Reset() {
	*x = ScoredAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geocoder_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoredAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoredAddress) ProtoMessage() {}

func (x *ScoredAddress) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geocoder_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoredAddress.ProtoReflect.Descriptor instead.
func (*ScoredAddress) Descriptor() ([]byte, []int) {
	return file_proto_geocoder_proto_rawDescGZIP(), []int{3}
}

func (x *ScoredAddress) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *ScoredAddress) GetNormedConfidence() float32 {
	if x != nil {
		return x.NormedConfidence
	}
	return 0
}

func (x *ScoredAddress) GetCompositeStreetAddress() string {
	if x != nil {
		return x.CompositeStreetAddress
	}
	return ""
}

// GeocodeResponse canonically represents a response from Geocoder.Geocode, composed of a
type GeocodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result     []*ScoredAddress `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	NumResults uint32           `protobuf:"varint,2,opt,name=num_results,json=numResults,proto3" json:"num_results,omitempty"`
}

func (x *GeocodeResponse) Reset() {
	*x = GeocodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geocoder_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeocodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeocodeResponse) ProtoMessage() {}

func (x *GeocodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geocoder_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeocodeResponse.ProtoReflect.Descriptor instead.
func (*GeocodeResponse) Descriptor() ([]byte, []int) {
	return file_proto_geocoder_proto_rawDescGZIP(), []int{4}
}

func (x *GeocodeResponse) GetResult() []*ScoredAddress {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GeocodeResponse) GetNumResults() uint32 {
	if x != nil {
		return x.NumResults
	}
	return 0
}

// CreateBatchRequest -
type CreateBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method    Method   `protobuf:"varint,1,opt,name=method,proto3,enum=geocoder.Method" json:"method,omitempty"`
	Addresses []string `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty"` // This is a bit lazy - should do oneOf but can't nest repeated in there...
	Points    []*Point `protobuf:"bytes,3,rep,name=points,proto3" json:"points,omitempty"`       // This is a bit lazy - should do oneOf but can't nest repeated in there...
}

func (x *CreateBatchRequest) Reset() {
	*x = CreateBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geocoder_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBatchRequest) ProtoMessage() {}

func (x *CreateBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geocoder_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBatchRequest.ProtoReflect.Descriptor instead.
func (*CreateBatchRequest) Descriptor() ([]byte, []int) {
	return file_proto_geocoder_proto_rawDescGZIP(), []int{5}
}

func (x *CreateBatchRequest) GetMethod() Method {
	if x != nil {
		return x.Method
	}
	return Method_FWD_FUZZY
}

func (x *CreateBatchRequest) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *CreateBatchRequest) GetPoints() []*Point {
	if x != nil {
		return x.Points
	}
	return nil
}

// StatusBatchRequest -
type BatchStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // uuid
}

func (x *BatchStatusRequest) Reset() {
	*x = BatchStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geocoder_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchStatusRequest) ProtoMessage() {}

func (x *BatchStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geocoder_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchStatusRequest.ProtoReflect.Descriptor instead.
func (*BatchStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_geocoder_proto_rawDescGZIP(), []int{6}
}

func (x *BatchStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// BatchStatusResponse -
type BatchStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                           // uuid
	Status       BatchGeocodeStatus     `protobuf:"varint,2,opt,name=status,proto3,enum=geocoder.BatchGeocodeStatus" json:"status,omitempty"` //
	DownloadPath string                 `protobuf:"bytes,3,opt,name=download_path,json=downloadPath,proto3" json:"download_path,omitempty"`
	UpdateTime   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *BatchStatusResponse) Reset() {
	*x = BatchStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geocoder_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchStatusResponse) ProtoMessage() {}

func (x *BatchStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geocoder_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchStatusResponse.ProtoReflect.Descriptor instead.
func (*BatchStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_geocoder_proto_rawDescGZIP(), []int{7}
}

func (x *BatchStatusResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BatchStatusResponse) GetStatus() BatchGeocodeStatus {
	if x != nil {
		return x.Status
	}
	return BatchGeocodeStatus_UNDEFINED_STATUS
}

func (x *BatchStatusResponse) GetDownloadPath() string {
	if x != nil {
		return x.DownloadPath
	}
	return ""
}

func (x *BatchStatusResponse) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// ResolvedAddress -
type ResolvedAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Query:
	//	*ResolvedAddress_AddressQuery
	//	*ResolvedAddress_PointQuery
	Query  isResolvedAddress_Query `protobuf_oneof:"query"`
	Result *ScoredAddress          `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ResolvedAddress) Reset() {
	*x = ResolvedAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geocoder_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolvedAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolvedAddress) ProtoMessage() {}

func (x *ResolvedAddress) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geocoder_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolvedAddress.ProtoReflect.Descriptor instead.
func (*ResolvedAddress) Descriptor() ([]byte, []int) {
	return file_proto_geocoder_proto_rawDescGZIP(), []int{8}
}

func (m *ResolvedAddress) GetQuery() isResolvedAddress_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *ResolvedAddress) GetAddressQuery() string {
	if x, ok := x.GetQuery().(*ResolvedAddress_AddressQuery); ok {
		return x.AddressQuery
	}
	return ""
}

func (x *ResolvedAddress) GetPointQuery() *Point {
	if x, ok := x.GetQuery().(*ResolvedAddress_PointQuery); ok {
		return x.PointQuery
	}
	return nil
}

func (x *ResolvedAddress) GetResult() *ScoredAddress {
	if x != nil {
		return x.Result
	}
	return nil
}

type isResolvedAddress_Query interface {
	isResolvedAddress_Query()
}

type ResolvedAddress_AddressQuery struct {
	AddressQuery string `protobuf:"bytes,1,opt,name=address_query,json=addressQuery,proto3,oneof"`
}

type ResolvedAddress_PointQuery struct {
	PointQuery *Point `protobuf:"bytes,2,opt,name=point_query,json=pointQuery,proto3,oneof"`
}

func (*ResolvedAddress_AddressQuery) isResolvedAddress_Query() {}

func (*ResolvedAddress_PointQuery) isResolvedAddress_Query() {}

type BatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ResolvedAddress `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *BatchResponse) Reset() {
	*x = BatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geocoder_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchResponse) ProtoMessage() {}

func (x *BatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geocoder_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchResponse.ProtoReflect.Descriptor instead.
func (*BatchResponse) Descriptor() ([]byte, []int) {
	return file_proto_geocoder_proto_rawDescGZIP(), []int{9}
}

func (x *BatchResponse) GetResults() []*ResolvedAddress {
	if x != nil {
		return x.Results
	}
	return nil
}

// IOResponse represents a
type IOResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success             bool  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	TotalObjectsWritten int32 `protobuf:"varint,2,opt,name=total_objects_written,json=totalObjectsWritten,proto3" json:"total_objects_written,omitempty"`
}

func (x *IOResponse) Reset() {
	*x = IOResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geocoder_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IOResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IOResponse) ProtoMessage() {}

func (x *IOResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geocoder_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IOResponse.ProtoReflect.Descriptor instead.
func (*IOResponse) Descriptor() ([]byte, []int) {
	return file_proto_geocoder_proto_rawDescGZIP(), []int{10}
}

func (x *IOResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *IOResponse) GetTotalObjectsWritten() int32 {
	if x != nil {
		return x.TotalObjectsWritten
	}
	return 0
}

var File_proto_geocoder_proto protoreflect.FileDescriptor

var file_proto_geocoder_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x72,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x41, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a,
	0x18, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x65,
	0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x16, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xbf, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x6f, 0x63,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0d, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x32, 0x0a, 0x0b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65,
	0x72, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x67, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65,
	0x72, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x42, 0x07, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xa3, 0x01, 0x0a, 0x0d, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67,
	0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x6e, 0x6f, 0x72, 0x6d,
	0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x10, 0x6e, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x63, 0x0a, 0x0f, 0x47, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x67, 0x65,
	0x6f, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x24, 0x0a, 0x12,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xbd, 0x01, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x67, 0x65, 0x6f,
	0x63, 0x6f, 0x64, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x6f, 0x63, 0x6f,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x32, 0x0a,
	0x0b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x44, 0x0a, 0x0d, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x22, 0x5a, 0x0a, 0x0a, 0x49, 0x4f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x74,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x57, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x2a, 0x28, 0x0a,
	0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x57, 0x44, 0x5f, 0x46,
	0x55, 0x5a, 0x5a, 0x59, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x56, 0x5f, 0x4e, 0x45,
	0x41, 0x52, 0x45, 0x53, 0x54, 0x10, 0x01, 0x2a, 0x6d, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x47, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x10, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x03, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x32, 0x97, 0x01, 0x0a, 0x08, 0x47, 0x65, 0x6f, 0x63, 0x6f,
	0x64, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x07, 0x47, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x2e, 0x67, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x6f, 0x63, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x65, 0x6f, 0x63, 0x6f,
	0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0c, 0x47, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x18, 0x2e, 0x67, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x67, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x6f, 0x63, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01,
	0x32, 0xa6, 0x01, 0x0a, 0x05, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x4c, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1c, 0x2e, 0x67, 0x65, 0x6f, 0x63,
	0x6f, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x65, 0x6f, 0x63, 0x6f, 0x64,
	0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x65, 0x6f,
	0x63, 0x6f, 0x64, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x65, 0x6f, 0x63, 0x6f,
	0x64, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x57, 0x0a, 0x0a, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x49, 0x0a, 0x1a, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x11, 0x2e, 0x67, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x72,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x14, 0x2e, 0x67, 0x65, 0x6f, 0x63, 0x6f,
	0x64, 0x65, 0x72, 0x2e, 0x49, 0x4f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x28, 0x01, 0x42, 0x1f, 0x5a, 0x1d, 0x67, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_geocoder_proto_rawDescOnce sync.Once
	file_proto_geocoder_proto_rawDescData = file_proto_geocoder_proto_rawDesc
)

func file_proto_geocoder_proto_rawDescGZIP() []byte {
	file_proto_geocoder_proto_rawDescOnce.Do(func() {
		file_proto_geocoder_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_geocoder_proto_rawDescData)
	})
	return file_proto_geocoder_proto_rawDescData
}

var file_proto_geocoder_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_geocoder_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_geocoder_proto_goTypes = []interface{}{
	(Method)(0),                   // 0: geocoder.Method
	(BatchGeocodeStatus)(0),       // 1: geocoder.BatchGeocodeStatus
	(*Point)(nil),                 // 2: geocoder.Point
	(*Address)(nil),               // 3: geocoder.Address
	(*GeocodeRequest)(nil),        // 4: geocoder.GeocodeRequest
	(*ScoredAddress)(nil),         // 5: geocoder.ScoredAddress
	(*GeocodeResponse)(nil),       // 6: geocoder.GeocodeResponse
	(*CreateBatchRequest)(nil),    // 7: geocoder.CreateBatchRequest
	(*BatchStatusRequest)(nil),    // 8: geocoder.BatchStatusRequest
	(*BatchStatusResponse)(nil),   // 9: geocoder.BatchStatusResponse
	(*ResolvedAddress)(nil),       // 10: geocoder.ResolvedAddress
	(*BatchResponse)(nil),         // 11: geocoder.BatchResponse
	(*IOResponse)(nil),            // 12: geocoder.IOResponse
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
}
var file_proto_geocoder_proto_depIdxs = []int32{
	2,  // 0: geocoder.Address.location:type_name -> geocoder.Point
	2,  // 1: geocoder.GeocodeRequest.point_query:type_name -> geocoder.Point
	0,  // 2: geocoder.GeocodeRequest.method:type_name -> geocoder.Method
	3,  // 3: geocoder.ScoredAddress.address:type_name -> geocoder.Address
	5,  // 4: geocoder.GeocodeResponse.result:type_name -> geocoder.ScoredAddress
	0,  // 5: geocoder.CreateBatchRequest.method:type_name -> geocoder.Method
	2,  // 6: geocoder.CreateBatchRequest.points:type_name -> geocoder.Point
	1,  // 7: geocoder.BatchStatusResponse.status:type_name -> geocoder.BatchGeocodeStatus
	13, // 8: geocoder.BatchStatusResponse.update_time:type_name -> google.protobuf.Timestamp
	2,  // 9: geocoder.ResolvedAddress.point_query:type_name -> geocoder.Point
	5,  // 10: geocoder.ResolvedAddress.result:type_name -> geocoder.ScoredAddress
	10, // 11: geocoder.BatchResponse.results:type_name -> geocoder.ResolvedAddress
	4,  // 12: geocoder.Geocoder.Geocode:input_type -> geocoder.GeocodeRequest
	4,  // 13: geocoder.Geocoder.GeocodeBatch:input_type -> geocoder.GeocodeRequest
	7,  // 14: geocoder.Batch.CreateBatch:input_type -> geocoder.CreateBatchRequest
	8,  // 15: geocoder.Batch.GetBatchStatus:input_type -> geocoder.BatchStatusRequest
	3,  // 16: geocoder.Management.InsertorReplaceAddressData:input_type -> geocoder.Address
	6,  // 17: geocoder.Geocoder.Geocode:output_type -> geocoder.GeocodeResponse
	6,  // 18: geocoder.Geocoder.GeocodeBatch:output_type -> geocoder.GeocodeResponse
	9,  // 19: geocoder.Batch.CreateBatch:output_type -> geocoder.BatchStatusResponse
	9,  // 20: geocoder.Batch.GetBatchStatus:output_type -> geocoder.BatchStatusResponse
	12, // 21: geocoder.Management.InsertorReplaceAddressData:output_type -> geocoder.IOResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_geocoder_proto_init() }
func file_proto_geocoder_proto_init() {
	if File_proto_geocoder_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_geocoder_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geocoder_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geocoder_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeocodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geocoder_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoredAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geocoder_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeocodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geocoder_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geocoder_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geocoder_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geocoder_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolvedAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geocoder_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geocoder_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IOResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_geocoder_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*GeocodeRequest_AddressQuery)(nil),
		(*GeocodeRequest_PointQuery)(nil),
	}
	file_proto_geocoder_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ResolvedAddress_AddressQuery)(nil),
		(*ResolvedAddress_PointQuery)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_geocoder_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_proto_geocoder_proto_goTypes,
		DependencyIndexes: file_proto_geocoder_proto_depIdxs,
		EnumInfos:         file_proto_geocoder_proto_enumTypes,
		MessageInfos:      file_proto_geocoder_proto_msgTypes,
	}.Build()
	File_proto_geocoder_proto = out.File
	file_proto_geocoder_proto_rawDesc = nil
	file_proto_geocoder_proto_goTypes = nil
	file_proto_geocoder_proto_depIdxs = nil
}
